name: "Res50-base"



#------------------- pyramid------

layer {
	bottom: "res5c"
	top: "res5c_11"
	name: "res5c_11"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}


layer {
   name: "res5c_up"
   type: "Deconvolution"
   bottom: "res5c_11"
   top: "res5c_up"
   convolution_param {
     kernel_size: 4
     stride: 2
     num_output: 256
     group: 256
     pad: 1
     weight_filler {
       type: "bilinear"
     }
     bias_term: false
   }
   param {
     lr_mult: 0
     decay_mult: 0
   }
}

layer {
	bottom: "res4f"
	top: "res4f_11"
	name: "res4f_11"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}


layer {
	bottom: "res5c_up"
	bottom: "res4f_11"
	top: "res4_merge"
	name: "res4_merge"
	type: "Eltwise"
}


layer {
   name: "res4_merge_up"
   type: "Deconvolution"
   bottom: "res4_merge"
   top: "res4_merge_up"
   convolution_param {
     kernel_size: 4
     stride: 2
     num_output: 256
     group: 256
     pad: 1
     weight_filler {
       type: "bilinear"
     }
     bias_term: false
   }
   param {
     lr_mult: 0
     decay_mult: 0
   }
}


layer {
	bottom: "res3d"
	top: "res3d_11"
	name: "res3d_11"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}



layer {
	bottom: "res4_merge_up"
	bottom: "res3d_11"
	top: "res3_merge"
	name: "res3_merge"
	type: "Eltwise"
}


layer {
   name: "res3_merge_up"
   type: "Deconvolution"
   bottom: "res3_merge"
   top: "res3_merge_up"
   convolution_param {
     kernel_size: 4
     stride: 2
     num_output: 256
     group: 256
     pad: 1
     weight_filler {
       type: "bilinear"
     }
     bias_term: false
   }
   param {
     lr_mult: 0
     decay_mult: 0
   }
}

layer {
	bottom: "res3_merge_up"
	bottom: "res2c"
	top: "res2_merge"
	name: "res2_merge"
	type: "Eltwise"
}

layer {
	bottom: "res2_merge"
	top: "final_merge"
	name: "final_merge"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}


layer {
	bottom: "final_merge"
	top: "pool5"
	name: "pool5"
	type: "Pooling"
	pooling_param {
		kernel_size: 7
		stride: 7
		pool: AVE
	}
}

layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc8_"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc8_"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 751
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_"
  bottom: "label"
  top: "loss"
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
